---
title: "Getting Started"
---


This course will make **extensive** use of the [R programming language]() through the [RStudio](https://posit.co/download/rstudio-desktop/) integrated development environment (IDE). 
Because the formal pre-requisites for this course are STAT 333 or 340, you are expected to have previous experience using the R programming language.

The course will also use version control (using git and GitHub) and Quarto for publishing the results of your analyses.
This page contains information


## Computing (R & RStudio)
:::{.callout-important}

## Warning

I will assume *fluency* with basic R functionality (e.g., assignment, writing and
executing scripts, saving data objects, setting environments, installing and loading packages), data manipulation with **dplyr** and other **tidyverse** packages, and visualization using either base R graphics or **ggplot2**. 
I will additionally assume some familiarity with fitting statistical models in
R and interpreting their output (e.g., using `lm` and `glm`).

If you do **not** meet the formal course prerequisites and/or have not used R in a previous course, this is **not** the right course for you. 
:::



### Additional R resources

Having issued that warning, you will see some new R functionality in the course.
As the focus is on answer sports problems, we will not spend significant classtime going over new functions, packages, or techniques.
If you find that there are gaps in your R knowledge, you are expected to fill them on your own time.
Here are some helpful resources

  * [R for Data Science](https://r4ds.hadley.nz)
  * [Data Science: A first introduction](https://datasciencebook.ca)



### Colorblind-friendly graphics

I am especially partial to the Okabe-Ito color palette.
Throughout the course notes, you will see snippets like
```{r oi-def}
oi_colors <-
  palette.colors(palette = "Okabe-Ito")
```
in which we explicitly create a vector holding colors from this color palette.
<!--
  More resources about plotting in a colorblind friendly fashion
--> 

## Version control (Git & GitHub)

<!--
  1. What is version control, what is git, github, why you should use it
     minor point: at the end of the course, you can show off your portfolio really easily; just share a GitHub link and someone can through your code and see how you. 
  2. Resources: link to several sites. For the purposes of this class, you primarily will be pushing, pulling, branching, and merging. It takes some time getting used to. But it's a very good return on investment
  3. Suggested workflow:
      a) create an account (if you don't already have one)
      b) Create a repository on GitHub to store your work for the class. Clone it on your laptop. At a minimum set up a directory for exercises and for reproducing the code in lecture. 
      c) For each project, your team can create a shared repository (one person owns it and then invites other people as collaborators).
-->

### Additional Resources


## Quarto

### Installation


### Publishing 
<!--
  If you are familiar with RMarkdown, think of Quarto as its evolved form. It supports more language (viz., python and Julia)
  You need to install quarto here; as we're using it with RStudio it's vital you get the latest version of R and RStudio!
  This course website and (most) of the slides were created with Quarto.
  And it is expected
  
  Particularly useful is the ability to create GitHub Flavored Markdown. This will let you post writeups (like this!) directly on your GitHub. This is a great, lightweight way to share your projects/portfolios.
  And indeed, this is how I expect you to submit your project writeups!
-->


<!--
  If you made it this far, click this link and respond to the survey here
-->


