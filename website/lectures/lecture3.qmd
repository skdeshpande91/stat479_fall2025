---
title: "Lecture 3: Estimating the Expected Value of a Game State"
format: html
---


## Overview


## Expected Runs in Baseball

Long history of statistical analyses in baseball.
This is partly due to its discrete nature; this permits analyses at the game-, inning-, at-bat-, and pitch-level.

### Accessing StatCast Data

## 

## Building our own expected goals model


Recall the interpretation of conditional expectation $\mathbb{E}[Y \vert X = x]$: we look at all possible combinations of $(X,Y)$ where $X = x$ and take the
In the context of expected runs, $Y$ is the number of runs scored in the half-inning.
And to estimate expected runs, we mirroed this definition: we looked

We only conditioned on a handful of variables.
You might (credibly!) argue that we can get a more nuanced 

Unforutnately, we can't just "bin and average" anymore.
Expected goals in soccer is a good example of this.

<!--
  Exercise: re-compute run expectancy based on the combination of outs, baserunners, and count. 
  What is the value of a called strike? 
-->

Formally, for every shot attempt let $Y$ be an indicator that the shot was made and let $\mathbf{X}$ be the conditioning information.
Depending on what we include in $\mathbf{X}$, XG can be very fine-grained

You might argue that the va


Intuitively, we expect shots taken very close to the goal to have larger xG than shots taken very far from the goal

### Handcrafting features


### Adding interactions
It may not just be distance and body part but their interaction; 

## Tree-based models

Adding more covariates and interactions becomes extremely tricky.
Methods based on regression trees are a convenient way to overcome this limitation.

### Illustration


## GK metrics

To what extent does a keeper affect XG?
To answer this this, we can fit two XG models. One with keeper information and one without.
We can then compare the two different XG values
Consider a model that includes goal keeper position one without.

<!--
  GK positioning: if we move the GK, then we implicitly change some of the features; visualize 
-->