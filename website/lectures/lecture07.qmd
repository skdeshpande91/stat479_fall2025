---
title: "Lecture 7: Wins Above Replacement I"
format: html
---

## Recap & Roadmap


## Adjusted Run Value

<!--

24 July: no need for park adjustment. Maybe a platoon adjustment but even that may not be necessary.

  Regress onto game state: residual is adjust run value over average. How much goes to baserunner and how much to batter.
  In this game state x event, check to see what the baserunners normally do. 
  Whatever doesn't go to baserunner, give to batter: e.g., on a single with runner on first. Most of the time, the runner advances to second. But when they advance to 3rd or score, we want to give more weight. P(k < K) is the prob. they advance fewer than what they actually did. Do some sort of weighting. Then give everything else to the batter. Don't necessarily normalize to 1


  Formally we write $delta_i = \alpha_{1} * \ind{1} + \cdots + \alpha_{B} * \ind{B} + \beta_{adv} * \ind{platoon-advantage} + \epsilon
  
  Systematically, we know that some parks are harder to score runs in than others. And when the batter and pitcher are of different handedness, there can be some differences
  We want to remove those systematic components, which are not within the batters control. Formally
  
  We can fit a linear model with an intercept using `lm`: not, we're really not interested in the coefficients or doing any significant testing. we just want to adjust the values
  We now have our residual epsilon, which captures the portion of delta *not* attributable to ballpark or platoon. How much of epsilon can be attributed to the batter and how much to the baserunner?
-->


## Baserunning

<!--
  Baserunner should get credit only for advancement beyond what would be expected given their starting location, the number of outs, and the hitting event that occured
    We can actually estimate this nonparametricly using our baserunning data-frame: we have the movement and can pull . We compute the average nonparametricly and 
-->

## Batting

<!--
eta: portion of adjusted offensive run value attributable to baserunners.
mu = epsilon-eta attributable to the hitter
** need to compare batter relative to other players at his position **

-->
